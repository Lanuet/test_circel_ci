version: 2.1 # Use version 2.1 to enable Orb usage.
orbs:
  win: circleci/windows@2.2.0 # The Windows orb give you everything you need to start using the Windows executor.

jobs:
  unit_tests:
    working_directory: ~/backend_app
    docker:
      - image: python:3.7.3
    steps:
      - run:
          name: Run unit tests
          command: |
            echo "Run unit test"
  integration_tests:
    executor: win/default
    working_directory: /qc/intergration_test
    steps:
      - add_ssh_keys:
          fingerprints:
            - "a4:0a:d3:04:3e:6a:ed:5a:eb:7d:e7:d5:4e:0a:e9:f7"
      - run:
          name: Configure SSH agent
          command: |
            ssh-add -D
            ssh-add ~/.ssh/id_rsa_somefingerprint
      - run:
          name: Clone test code
          command: |
            git clone git@github.com:Lannt-teko/ppm-api-testing.git ppm-api-testing
      - restore_cache:
          key: pip-{{checksum "ppm-api-testing/requirements.txt"}}
      - run:
          name: Run tests
          command: |
            cd ppm-api-testing
            pip install -r requirements.txt
            mkdir test-reports
            echo "Intergration test"
      #            pytest --submit-tests --html=test-reports/report.html tests/functional/price/test_create_overlap_price_schedule.py
      - store_test_results:
          path: ppm-api-testing/test-reports
      - store_artifacts:
          path: ppm-api-testing/test-reports
      - save_cache:
          key: pip-{{checksum "ppm-api-testing/requirements.txt"}}
          paths:
            - ~/.cache/pip
workflows:
  version: 2.1
  build-test:
    jobs:
      #      - unit_tests
      - integration_tests

#    environment:
#      MYSQL_DATABASE: test-ppm
#      MYSQL_USER: dev
#      MYSQL_PASSWORD: dev
#      - run:
#          name: Add ssh-keyscan
#          command: ssh-keygen -R github.com